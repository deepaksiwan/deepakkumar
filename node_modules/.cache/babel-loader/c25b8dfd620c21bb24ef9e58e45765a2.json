{"ast":null,"code":"import axios from 'axios';\nimport { MENTOR_LIST_REQUEST, MENTOR_LIST_SUCCESS, MENTOR_LIST_FAIL, MENTOR_LIST_SEARCH, MENTOR_LIST_DETAILS_REQUEST, MENTOR_LIST_DETAILS_SUCCESS, MENTOR_LIST_DETAILS_FAIL } from '../constants/mentorConstants';\nexport const listMentor = () => async dispatch => {\n  try {\n    dispatch({\n      type: MENTOR_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('https://mentorkart.org/api/sso-mentor-list');\n    const fil = data.data; // console.log('All:Mentors : ', fil[0].industry, fil);\n\n    dispatch({\n      type: MENTOR_LIST_SUCCESS,\n      payload: fil\n    });\n  } catch (error) {\n    dispatch({\n      type: MENTOR_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const filterMentor = chec => async dispatch => {\n  try {\n    dispatch({\n      type: MENTOR_LIST_REQUEST\n    });\n    console.log('chec.toString()', chec.toString(), chec);\n    const {\n      data\n    } = await axios.get(`${process.env.REACT_APP_WEBSITE_URL}/api/sso-mentor-list`);\n    const fil = data.data;\n    console.log('fil-->', fil);\n    const d = chec.map(g => fil.filter(x => Object.values(x).join(',').toLowerCase().includes(g.toLowerCase()))).flat();\n    console.log('d-->', d);\n    dispatch({\n      type: MENTOR_LIST_SUCCESS,\n      payload: d\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: MENTOR_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const listStudentMentor = () => async dispatch => {\n  try {\n    dispatch({\n      type: MENTOR_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('https://mentorkart.org/api/sso-mentor-list');\n    const fil = data.data;\n    const std = fil.filter(x => {\n      if (x.user_categories) {\n        return x.user_categories.split(',').includes('STUDENT');\n      }\n\n      return x.user_categories;\n    });\n    dispatch({\n      type: MENTOR_LIST_SUCCESS,\n      payload: std\n    });\n  } catch (error) {\n    dispatch({\n      type: MENTOR_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const listProfessionalMentor = () => async dispatch => {\n  try {\n    dispatch({\n      type: MENTOR_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('https://mentorkart.org/api/sso-mentor-list');\n    const fil = data.data;\n    const std = fil.filter(x => {\n      if (x.user_categories) {\n        return x.user_categories.split(',').includes('PROFESSIONAL');\n      }\n\n      return x.user_categories;\n    });\n    dispatch({\n      type: MENTOR_LIST_SUCCESS,\n      payload: std\n    });\n  } catch (error) {\n    dispatch({\n      type: MENTOR_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const listEntrepreneurMentor = () => async dispatch => {\n  try {\n    dispatch({\n      type: MENTOR_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('https://mentorkart.org/api/sso-mentor-list');\n    const fil = data.data;\n    const std = fil.filter(x => {\n      if (x.user_categories) {\n        return x.user_categories.split(',').includes('ENTREPRENEUR');\n      }\n\n      return x.user_categories;\n    });\n    dispatch({\n      type: MENTOR_LIST_SUCCESS,\n      payload: std\n    });\n  } catch (error) {\n    dispatch({\n      type: MENTOR_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const searchMentor = query => async dispatch => {\n  try {\n    dispatch({\n      type: MENTOR_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('https://mentorkart.org/api/sso-mentor-list');\n    const fil = data.data;\n    let isFound;\n    const std = fil.filter(x => {\n      if (x.first_name) {\n        isFound = x.first_name.toLowerCase().includes(query.toLowerCase());\n        if (isFound) return isFound;\n      }\n\n      if (x.middle_name) {\n        isFound = x.middle_name.toLowerCase().includes(query.toLowerCase());\n        if (isFound) return isFound;\n      }\n\n      if (x.last_name) {\n        isFound = x.last_name.toLowerCase().includes(query.toLowerCase());\n        if (isFound) return isFound;\n      }\n\n      if (x.area_of_experties) {\n        isFound = x.area_of_experties.toLowerCase().includes(query.toLowerCase());\n        if (isFound) return isFound;\n      }\n\n      if (x.user_category) {\n        isFound = x.user_category.toLowerCase().includes(query.toLowerCase());\n        if (isFound) return isFound;\n      }\n\n      if (x.organisation) {\n        isFound = x.organisation.toLowerCase().includes(query.toLowerCase());\n        if (isFound) return isFound;\n      }\n\n      if (x.industry) {\n        isFound = x.industry.toLowerCase().includes(query.toLowerCase());\n        if (isFound) return isFound;\n      }\n\n      if (x.current_position) {\n        isFound = x.current_position.toLowerCase().includes(query.toLowerCase());\n        if (isFound) return isFound;\n      }\n\n      if (x.designation) {\n        isFound = x.designation.toLowerCase().includes(query.toLowerCase());\n        if (isFound) return isFound;\n      }\n\n      return undefined;\n    }); // console.log(std);\n\n    dispatch({\n      type: MENTOR_LIST_SEARCH,\n      payload: std\n    });\n  } catch (error) {\n    dispatch({\n      type: MENTOR_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const listMentorDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: MENTOR_LIST_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`https://mentorkart.org/api/sso-mentor/${id}`);\n    const fil = data.data;\n    dispatch({\n      type: MENTOR_LIST_DETAILS_SUCCESS,\n      payload: fil\n    });\n  } catch (error) {\n    dispatch({\n      type: MENTOR_LIST_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};","map":{"version":3,"sources":["B:/gitLabContri_staging-pr/frontend/src/redux/actions/mentorActions.js"],"names":["axios","MENTOR_LIST_REQUEST","MENTOR_LIST_SUCCESS","MENTOR_LIST_FAIL","MENTOR_LIST_SEARCH","MENTOR_LIST_DETAILS_REQUEST","MENTOR_LIST_DETAILS_SUCCESS","MENTOR_LIST_DETAILS_FAIL","listMentor","dispatch","type","data","get","fil","payload","error","response","message","filterMentor","chec","console","log","toString","process","env","REACT_APP_WEBSITE_URL","d","map","g","filter","x","Object","values","join","toLowerCase","includes","flat","listStudentMentor","std","user_categories","split","listProfessionalMentor","listEntrepreneurMentor","searchMentor","query","isFound","first_name","middle_name","last_name","area_of_experties","user_category","organisation","industry","current_position","designation","undefined","listMentorDetails","id"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  MENTOR_LIST_REQUEST,\r\n  MENTOR_LIST_SUCCESS,\r\n  MENTOR_LIST_FAIL,\r\n  MENTOR_LIST_SEARCH,\r\n  MENTOR_LIST_DETAILS_REQUEST,\r\n  MENTOR_LIST_DETAILS_SUCCESS,\r\n  MENTOR_LIST_DETAILS_FAIL,\r\n} from '../constants/mentorConstants';\r\n\r\nexport const listMentor = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: MENTOR_LIST_REQUEST });\r\n    const { data } = await axios.get(\r\n      'https://mentorkart.org/api/sso-mentor-list'\r\n    );\r\n    const fil = data.data;\r\n    // console.log('All:Mentors : ', fil[0].industry, fil);\r\n\r\n    dispatch({\r\n      type: MENTOR_LIST_SUCCESS,\r\n      payload: fil,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MENTOR_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const filterMentor = (chec) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: MENTOR_LIST_REQUEST });\r\n    console.log('chec.toString()', chec.toString(), chec);\r\n    const { data } = await axios.get(\r\n      `${process.env.REACT_APP_WEBSITE_URL}/api/sso-mentor-list`\r\n    );\r\n    const fil = data.data;\r\n    console.log('fil-->', fil);\r\n    const d = chec\r\n      .map((g) =>\r\n        fil.filter((x) =>\r\n          Object.values(x).join(',').toLowerCase().includes(g.toLowerCase())\r\n        )\r\n      )\r\n      .flat();\r\n    console.log('d-->', d);\r\n    dispatch({\r\n      type: MENTOR_LIST_SUCCESS,\r\n      payload: d,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: MENTOR_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listStudentMentor = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: MENTOR_LIST_REQUEST });\r\n    const { data } = await axios.get(\r\n      'https://mentorkart.org/api/sso-mentor-list'\r\n    );\r\n    const fil = data.data;\r\n    const std = fil.filter((x) => {\r\n      if (x.user_categories) {\r\n        return x.user_categories.split(',').includes('STUDENT');\r\n      }\r\n      return x.user_categories;\r\n    });\r\n\r\n    dispatch({\r\n      type: MENTOR_LIST_SUCCESS,\r\n      payload: std,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MENTOR_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProfessionalMentor = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: MENTOR_LIST_REQUEST });\r\n    const { data } = await axios.get(\r\n      'https://mentorkart.org/api/sso-mentor-list'\r\n    );\r\n    const fil = data.data;\r\n    const std = fil.filter((x) => {\r\n      if (x.user_categories) {\r\n        return x.user_categories.split(',').includes('PROFESSIONAL');\r\n      }\r\n      return x.user_categories;\r\n    });\r\n\r\n    dispatch({\r\n      type: MENTOR_LIST_SUCCESS,\r\n      payload: std,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MENTOR_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listEntrepreneurMentor = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: MENTOR_LIST_REQUEST });\r\n    const { data } = await axios.get(\r\n      'https://mentorkart.org/api/sso-mentor-list'\r\n    );\r\n    const fil = data.data;\r\n    const std = fil.filter((x) => {\r\n      if (x.user_categories) {\r\n        return x.user_categories.split(',').includes('ENTREPRENEUR');\r\n      }\r\n      return x.user_categories;\r\n    });\r\n\r\n    dispatch({\r\n      type: MENTOR_LIST_SUCCESS,\r\n      payload: std,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MENTOR_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const searchMentor = (query) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: MENTOR_LIST_REQUEST });\r\n    const { data } = await axios.get(\r\n      'https://mentorkart.org/api/sso-mentor-list'\r\n    );\r\n    const fil = data.data;\r\n    let isFound;\r\n    const std = fil.filter((x) => {\r\n      if (x.first_name) {\r\n        isFound = x.first_name.toLowerCase().includes(query.toLowerCase());\r\n        if (isFound) return isFound;\r\n      }\r\n      if (x.middle_name) {\r\n        isFound = x.middle_name.toLowerCase().includes(query.toLowerCase());\r\n        if (isFound) return isFound;\r\n      }\r\n      if (x.last_name) {\r\n        isFound = x.last_name.toLowerCase().includes(query.toLowerCase());\r\n        if (isFound) return isFound;\r\n      }\r\n      if (x.area_of_experties) {\r\n        isFound = x.area_of_experties\r\n          .toLowerCase()\r\n          .includes(query.toLowerCase());\r\n        if (isFound) return isFound;\r\n      }\r\n      if (x.user_category) {\r\n        isFound = x.user_category.toLowerCase().includes(query.toLowerCase());\r\n        if (isFound) return isFound;\r\n      }\r\n      if (x.organisation) {\r\n        isFound = x.organisation.toLowerCase().includes(query.toLowerCase());\r\n        if (isFound) return isFound;\r\n      }\r\n      if (x.industry) {\r\n        isFound = x.industry.toLowerCase().includes(query.toLowerCase());\r\n        if (isFound) return isFound;\r\n      }\r\n      if (x.current_position) {\r\n        isFound = x.current_position\r\n          .toLowerCase()\r\n          .includes(query.toLowerCase());\r\n        if (isFound) return isFound;\r\n      }\r\n      if (x.designation) {\r\n        isFound = x.designation.toLowerCase().includes(query.toLowerCase());\r\n        if (isFound) return isFound;\r\n      }\r\n      return undefined;\r\n    });\r\n    // console.log(std);\r\n\r\n    dispatch({\r\n      type: MENTOR_LIST_SEARCH,\r\n      payload: std,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MENTOR_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMentorDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: MENTOR_LIST_DETAILS_REQUEST });\r\n    const { data } = await axios.get(\r\n      `https://mentorkart.org/api/sso-mentor/${id}`\r\n    );\r\n    const fil = data.data;\r\n\r\n    dispatch({\r\n      type: MENTOR_LIST_DETAILS_SUCCESS,\r\n      payload: fil,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MENTOR_LIST_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}