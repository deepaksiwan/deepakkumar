{"ast":null,"code":"var _jsxFileName = \"C:\\\\clientpinsoutcode\\\\client\\\\src\\\\components\\\\find-mentor-section\\\\MentorFilter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filterMentor } from '../../redux/actions/mentorActions';\nimport { Button } from 'react-bootstrap'; // import SelectSearch from 'react-select-search';\n\nimport Select from 'react-select';\nimport \"react-select-search/style.css\"; // export const moreFilterFirstPrefOptions = allOptions.filter((v) => v!=='Others').map((val) => {\n\nimport { moreFilterFirstPrefOptions } from './../data/moreFilterFirstPrefOptions'; // import { firstPrefOptions } from './../data/firstPrefOptions';\n\nimport { moreFilterindustryOptions } from '../data/moreFilterindustryOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MentorFilter = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const valuesInputIndustry = useRef();\n  const valuesInputFirstPref = useRef();\n  const [check, setCheck] = useState([]); // const [values, setValues] = useState([]);\n  // const [industry, setIndustry] = useState();\n  // const map = new Map();\n  // filterMentor.\n\n  /* const handleCheck = (e) => {\r\n     console.log('e.target.value-->current ',e.target.value);//e.target.value--> Aeronnautics Aerospace & Defense\r\n     let arr = [...check]\r\n     console.log('check full ticked array yet-->',check);//[]\r\n     let clicked = e.target.value\r\n     let checkfinish = arr.indexOf(clicked)\r\n  \n     if (checkfinish === -1) {\r\n       arr.push(clicked)\r\n     } else {\r\n       arr.splice(checkfinish, 1)\r\n     } \r\n     // if(clicked==='Others'){\r\n     //   industry(clicked);\r\n     // }\r\n     setCheck(arr)\r\n   }*/\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('At final form submittion', check);\n    dispatch(filterMentor(check));\n    props.mentorFilterBtn(false);\n  };\n\n  const onClear = e => {\n    e.preventDefault();\n    setCheck([]); // console.log('values, e.current.prop ->',values, e);\n\n    valuesInputIndustry.current.clearValue();\n    valuesInputFirstPref.current.clearValue(); // values.current.select.clearValue();\n  }; // const searchDropdownHandler = (totalOptions) => {\n  //   return (searchVal) => {\n  //       if(searchVal === '')\n  //         return totalOptions;\n  //       const filteredOptions = totalOptions.filter(\n  //         (val) => {\n  //           return ( \n  //             val.name.toLowerCase().startsWith(searchVal.toLowerCase())\n  //             );\n  //       });\n  //       return filteredOptions;\n  //   }\n  // }\n\n\n  const industryHandleChange = (...args) => {\n    var _args$, _args$2;\n\n    console.log('currentOnchange-->', args); // let arr = [...check]\n    // let clicked = e.target.value\n\n    let clicked = (_args$ = args[0]) === null || _args$ === void 0 ? void 0 : _args$.length; // console.log(clicked);\n\n    clicked = (_args$2 = args[0][clicked - 1]) === null || _args$2 === void 0 ? void 0 : _args$2.value;\n    console.log('current clicked value', clicked); // let checkfinish = arr.indexOf(clicked)\n    // if (checkfinish === -1) {\n    //   arr.push(clicked)\n    // } else {\n    //   arr.splice(checkfinish, 1)\n    // }\n\n    setCheck(prevState => {\n      // console.log('clikckedinsetCheckfunction',clicked);\n      // console.log('prevState',prevState);\n      let isIndexFound = prevState.indexOf(clicked);\n      console.log(isIndexFound);\n\n      if (isIndexFound === -1) {\n        prevState.push(clicked);\n        return prevState;\n      } else return prevState;\n    });\n    console.log(\"CHANGE:\");\n    console.log('FULL LENGTH ARRAY TO CHECKED', check); // setTimeout(()=>console.log(check), 10000);\n    // searchInput.current.querySelector(\"input\").value = \"\";\n    // console.log(\"ARGS:\", args);\n    // setIndustry(args[1].name);\n    // console.log('searchIndustryDropdownValue--->',searchIndustryDropdownValue.current);\n  }; // const optionsWithoutOthers = industryOptions.pop();\n  // console.log('Just checking---->',optionsWithoutOthers, industryOptions);\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: 'absolute',\n        right: '10px',\n        top: '25px',\n        border: 'none',\n        color: 'black'\n      },\n      children: \" \\u2716\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '40px',\n        marginBottom: '50px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Industry\",\n        children: \"Select Your Industry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Select // defaultValue={[moreFilterindustryOptions[1], moreFilterindustryOptions[2]]}\n      , {\n        isMulti: true,\n        name: \"industry\",\n        options: moreFilterindustryOptions.map(e => {\n          return {\n            value: e.value,\n            label: e.name\n          };\n        }),\n        className: \"basic-multi-select\",\n        classNamePrefix: \"select\",\n        onChange: industryHandleChange,\n        ref: valuesInputIndustry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"first-pref\",\n        children: [\"Choose Domain Expertise \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"(1st preference)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select // defaultValue={[moreFilterindustryOptions[1], moreFilterindustryOptions[2]]}\n      , {\n        isMulti: true,\n        name: \"domain\",\n        options: moreFilterFirstPrefOptions.map(e => {\n          return {\n            value: e.value,\n            label: e.name\n          };\n        }),\n        className: \"basic-multi-select\",\n        classNamePrefix: \"select\",\n        onChange: industryHandleChange,\n        ref: valuesInputFirstPref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexDirection: 'row',\n        listStyle: 'none',\n        marginTop: '75px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button // classNamePrefix=\"select\"\n      , {\n        variant: \"danger\",\n        onClick: onClear,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MentorFilter, \"kN4TthsjvtiKOw1Ux3lpDibGlmg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = MentorFilter;\nexport default MentorFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"MentorFilter\");","map":{"version":3,"sources":["C:/clientpinsoutcode/client/src/components/find-mentor-section/MentorFilter.js"],"names":["React","useState","useRef","useDispatch","filterMentor","Button","Select","moreFilterFirstPrefOptions","moreFilterindustryOptions","MentorFilter","props","dispatch","valuesInputIndustry","valuesInputFirstPref","check","setCheck","handleSubmit","e","preventDefault","console","log","mentorFilterBtn","onClear","current","clearValue","industryHandleChange","args","clicked","length","value","prevState","isIndexFound","indexOf","push","position","right","top","border","color","marginTop","marginBottom","map","label","name","display","justifyContent","flexDirection","listStyle"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { filterMentor } from '../../redux/actions/mentorActions';\r\nimport { Button } from 'react-bootstrap';\r\n// import SelectSearch from 'react-select-search';\r\nimport Select from 'react-select';\r\nimport \"react-select-search/style.css\";\r\n  // export const moreFilterFirstPrefOptions = allOptions.filter((v) => v!=='Others').map((val) => {\r\n    import { moreFilterFirstPrefOptions } from './../data/moreFilterFirstPrefOptions';\r\n// import { firstPrefOptions } from './../data/firstPrefOptions';\r\nimport { moreFilterindustryOptions } from '../data/moreFilterindustryOptions';\r\n\r\nconst MentorFilter = (props) => {\r\n  const dispatch = useDispatch();\r\n  const valuesInputIndustry = useRef();\r\n  const valuesInputFirstPref = useRef();\r\n  const [check, setCheck] = useState([])\r\n  // const [values, setValues] = useState([]);\r\n  // const [industry, setIndustry] = useState();\r\n\r\n  // const map = new Map();\r\n  // filterMentor.\r\n\r\n\r\n\r\n /* const handleCheck = (e) => {\r\n    console.log('e.target.value-->current ',e.target.value);//e.target.value--> Aeronnautics Aerospace & Defense\r\n    let arr = [...check]\r\n    console.log('check full ticked array yet-->',check);//[]\r\n    let clicked = e.target.value\r\n    let checkfinish = arr.indexOf(clicked)\r\n\r\n    if (checkfinish === -1) {\r\n      arr.push(clicked)\r\n    } else {\r\n      arr.splice(checkfinish, 1)\r\n    } \r\n    // if(clicked==='Others'){\r\n    //   industry(clicked);\r\n    // }\r\n    setCheck(arr)\r\n  }*/\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log('At final form submittion',check);\r\n    dispatch(filterMentor(check));\r\n    props.mentorFilterBtn(false)\r\n  }\r\n\r\n  const onClear = (e) => {\r\n    e.preventDefault();\r\n    setCheck([]);\r\n    \r\n    // console.log('values, e.current.prop ->',values, e);\r\n    valuesInputIndustry.current.clearValue();\r\n    valuesInputFirstPref.current.clearValue();\r\n    // values.current.select.clearValue();\r\n\r\n  }\r\n\r\n  \r\n  // const searchDropdownHandler = (totalOptions) => {\r\n\r\n  //   return (searchVal) => {\r\n  //       if(searchVal === '')\r\n  //         return totalOptions;\r\n\r\n  //       const filteredOptions = totalOptions.filter(\r\n  //         (val) => {\r\n  //           return ( \r\n  //             val.name.toLowerCase().startsWith(searchVal.toLowerCase())\r\n  //             );\r\n  //       });\r\n  //       return filteredOptions;\r\n  //   }\r\n  // }\r\n\r\n  \r\n  const industryHandleChange = (...args) => {\r\n    console.log('currentOnchange-->',args)\r\n    // let arr = [...check]\r\n    // let clicked = e.target.value\r\n    let clicked = args[0]?.length;\r\n    // console.log(clicked);\r\n    clicked = args[0][clicked-1]?.value;\r\n    console.log('current clicked value',clicked);\r\n    // let checkfinish = arr.indexOf(clicked)\r\n  \r\n    // if (checkfinish === -1) {\r\n    //   arr.push(clicked)\r\n    // } else {\r\n    //   arr.splice(checkfinish, 1)\r\n    // }\r\n    setCheck((prevState) => {\r\n      // console.log('clikckedinsetCheckfunction',clicked);\r\n      // console.log('prevState',prevState);\r\n      let isIndexFound = prevState.indexOf(clicked);\r\n      console.log(isIndexFound);\r\n      if(isIndexFound === -1){\r\n        prevState.push(clicked);\r\n        return prevState;\r\n      }\r\n      else\r\n        return prevState;\r\n    });\r\n    console.log(\"CHANGE:\");\r\n    console.log('FULL LENGTH ARRAY TO CHECKED',check);\r\n    // setTimeout(()=>console.log(check), 10000);\r\n    // searchInput.current.querySelector(\"input\").value = \"\";\r\n    // console.log(\"ARGS:\", args);\r\n    // setIndustry(args[1].name);\r\n    // console.log('searchIndustryDropdownValue--->',searchIndustryDropdownValue.current);\r\n  };\r\n\r\n  // const optionsWithoutOthers = industryOptions.pop();\r\n  // console.log('Just checking---->',optionsWithoutOthers, industryOptions);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <button style={{position: 'absolute',right:'10px', top:'25px', border:'none', color:'black'}}> &#10006;</button>\r\n      <div style={{\r\n        marginTop: '40px',\r\n        marginBottom: '50px'\r\n      }}>\r\n      <label htmlFor=\"Industry\">Select Your Industry</label>\r\n\r\n      \r\n      \r\n\r\n<Select\r\n    // defaultValue={[moreFilterindustryOptions[1], moreFilterindustryOptions[2]]}\r\n    isMulti={true}\r\n    name=\"industry\"\r\n    options={moreFilterindustryOptions.map((e) => {return {value:e.value,label:e.name}})}\r\n    className=\"basic-multi-select\"\r\n    classNamePrefix=\"select\"\r\n    onChange={industryHandleChange}\r\n    ref={valuesInputIndustry}\r\n    />\r\n\r\n</div>\r\n      <div className=\"form-group mb-4\">\r\n        <label htmlFor=\"first-pref\">\r\n          Choose Domain Expertise <span>(1st preference)</span>\r\n        </label>\r\n\r\n<Select\r\n    // defaultValue={[moreFilterindustryOptions[1], moreFilterindustryOptions[2]]}\r\n    isMulti={true}\r\n    name=\"domain\"\r\n    options={moreFilterFirstPrefOptions.map((e) => {return {value:e.value,label:e.name}})}\r\n    className=\"basic-multi-select\"\r\n    classNamePrefix=\"select\"\r\n    onChange={industryHandleChange}\r\n    ref={valuesInputFirstPref}\r\n  />\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-around',\r\n          flexDirection: 'row',\r\n          listStyle: 'none',\r\n          marginTop: '75px'\r\n        }}\r\n      >\r\n        <Button variant=\"success\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          // classNamePrefix=\"select\"\r\n          variant=\"danger\"\r\n          onClick={onClear}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default MentorFilter;\r\n"]},"metadata":{},"sourceType":"module"}