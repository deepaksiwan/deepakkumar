{"ast":null,"code":"import axios from 'axios';\nimport { FEATURE_GET_REQUEST, FEATURE_GET_SUCCESS, FEATURE_GET_FAIL } from '../constants/featureConstants';\nexport const listFeature = () => async dispatch => {\n  try {\n    dispatch({\n      type: FEATURE_GET_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${process.env.REACT_APP_WEBSITE_URL_PINS}/news`);\n    dispatch({\n      type: FEATURE_GET_SUCCESS,\n      payload: [data]\n    });\n  } catch (error) {\n    dispatch({\n      type: FEATURE_GET_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};","map":{"version":3,"sources":["C:/clientpinsoutcode/client/src/redux/actions/featureActions.js"],"names":["axios","FEATURE_GET_REQUEST","FEATURE_GET_SUCCESS","FEATURE_GET_FAIL","listFeature","dispatch","type","data","get","process","env","REACT_APP_WEBSITE_URL_PINS","payload","error","response","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,gBAHF,QAIO,+BAJP;AAMA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMP,KAAK,CAACQ,GAAN,CACpB,GAAEC,OAAO,CAACC,GAAR,CAAYC,0BAA2B,OADrB,CAAvB;AAIAN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,mBADC;AAEPU,MAAAA,OAAO,EAAE,CAACL,IAAD;AAFF,KAAD,CAAR;AAID,GAVD,CAUE,OAAOM,KAAP,EAAc;AACdR,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,gBADC;AAEPS,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACC;AALL,KAAD,CAAR;AAOD;AACF,CApBM","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  FEATURE_GET_REQUEST,\r\n  FEATURE_GET_SUCCESS,\r\n  FEATURE_GET_FAIL,\r\n} from '../constants/featureConstants';\r\n\r\nexport const listFeature = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: FEATURE_GET_REQUEST });\r\n    const { data } = await axios.get(\r\n      `${process.env.REACT_APP_WEBSITE_URL_PINS}/news`\r\n    );\r\n\r\n    dispatch({\r\n      type: FEATURE_GET_SUCCESS,\r\n      payload: [data],\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FEATURE_GET_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}