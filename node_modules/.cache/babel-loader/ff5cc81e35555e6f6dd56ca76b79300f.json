{"ast":null,"code":"var _jsxFileName = \"C:\\\\clientpinsoutcode\\\\client\\\\src\\\\components\\\\youtube-section\\\\YoutubeSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport YouTube from 'react-youtube';\nimport getYouTubeID from 'get-youtube-id';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listYoutube } from '../../redux/actions/youtubeActions';\nimport { listWebsiteContent } from '../../redux/actions/websiteContentActions'; // import Swiper core and required modules\n\nimport SwiperCore, { Pagination, A11y, Autoplay } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react'; // Import Swiper styles\n\nimport 'swiper/swiper.scss';\nimport 'swiper/components/pagination/pagination.scss'; // install Swiper modules\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSwiperCore.use([Pagination, A11y, Autoplay]);\n\nconst YoutubeSection = () => {\n  _s();\n\n  var _websiteContent$, _websiteContent$$data, _websiteContent$2, _websiteContent$2$dat;\n\n  const dispatch = useDispatch();\n  const youtubeList = useSelector(state => state.youtubeList);\n  const websiteContentList = useSelector(state => state.websiteContentList);\n  const {\n    youtube\n  } = youtubeList;\n  const {\n    websiteContent\n  } = websiteContentList;\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    dispatch(listYoutube());\n    dispatch(listWebsiteContent());\n  }, [dispatch]);\n  const opts = {\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0,\n      origin: []\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"youtube-section py-5 mb-lg-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-xxl px-xxl-0 px-lg-5 px-md-4 px-sm-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: (_websiteContent$ = websiteContent[1]) === null || _websiteContent$ === void 0 ? void 0 : (_websiteContent$$data = _websiteContent$.data[26]) === null || _websiteContent$$data === void 0 ? void 0 : _websiteContent$$data.field_data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: (_websiteContent$2 = websiteContent[1]) === null || _websiteContent$2 === void 0 ? void 0 : (_websiteContent$2$dat = _websiteContent$2.data[27]) === null || _websiteContent$2$dat === void 0 ? void 0 : _websiteContent$2$dat.field_data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3 align-items-center text-center\",\n        children: /*#__PURE__*/_jsxDEV(Swiper, {\n          spaceBetween: 50,\n          slidesPerView: 1,\n          pagination: {\n            clickable: true\n          },\n          autoplay: {\n            autoplay: true,\n            delay: 5000\n          },\n          breakpoints: {\n            // when window width is >= 0px\n            0: {\n              slidesPerView: 1\n            },\n            // when window width is >= 1000px\n            900: {\n              slidesPerView: 2\n            }\n          },\n          children: youtube[0] && youtube[0].youtube && youtube[0].youtube.slice(0, 7).map((video, index) => {\n            return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"youtube-video\",\n                children: /*#__PURE__*/_jsxDEV(YouTube, {\n                  videoId: getYouTubeID(video.url)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(YoutubeSection, \"QtaY0YAr3xt057so62agtNwesLg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = YoutubeSection;\nexport default YoutubeSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"YoutubeSection\");","map":{"version":3,"sources":["C:/clientpinsoutcode/client/src/components/youtube-section/YoutubeSection.js"],"names":["React","useEffect","YouTube","getYouTubeID","useDispatch","useSelector","listYoutube","listWebsiteContent","SwiperCore","Pagination","A11y","Autoplay","Swiper","SwiperSlide","use","YoutubeSection","dispatch","youtubeList","state","websiteContentList","youtube","websiteContent","window","scrollTo","opts","playerVars","autoplay","origin","data","field_data","clickable","delay","slidesPerView","slice","map","video","index","url"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport getYouTubeID from 'get-youtube-id';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listYoutube } from '../../redux/actions/youtubeActions';\r\nimport { listWebsiteContent } from '../../redux/actions/websiteContentActions';\r\n\r\n// import Swiper core and required modules\r\nimport SwiperCore, { Pagination, A11y, Autoplay } from 'swiper';\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\n\r\n// install Swiper modules\r\nSwiperCore.use([Pagination, A11y, Autoplay]);\r\n\r\nconst YoutubeSection = () => {\r\n  const dispatch = useDispatch();\r\n  const youtubeList = useSelector((state) => state.youtubeList);\r\n  const websiteContentList = useSelector((state) => state.websiteContentList);\r\n\r\n  const { youtube } = youtubeList;\r\n  const { websiteContent } = websiteContentList;\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    dispatch(listYoutube());\r\n    dispatch(listWebsiteContent());\r\n  }, [dispatch]);\r\n\r\n  const opts = {\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 0,\r\n      origin: [],\r\n    },\r\n  };\r\n  return (\r\n    <div className='youtube-section py-5 mb-lg-5'>\r\n      <div className='container-xxl px-xxl-0 px-lg-5 px-md-4 px-sm-3'>\r\n        <div className='row text-center'>\r\n          <span>{websiteContent[1]?.data[26]?.field_data}</span>\r\n          <h1>{websiteContent[1]?.data[27]?.field_data}</h1>\r\n        </div>\r\n        <div className='mt-3 align-items-center text-center'>\r\n          <Swiper\r\n            spaceBetween={50}\r\n            slidesPerView={1}\r\n            pagination={{ clickable: true }}\r\n            autoplay={{ autoplay: true, delay: 5000 }}\r\n            breakpoints={{\r\n              // when window width is >= 0px\r\n              0: {\r\n                slidesPerView: 1,\r\n              },\r\n              // when window width is >= 1000px\r\n              900: {\r\n                slidesPerView: 2,\r\n              },\r\n            }}\r\n          >\r\n            {youtube[0] &&\r\n              youtube[0].youtube &&\r\n              youtube[0].youtube.slice(0, 7).map((video, index) => {\r\n                return (\r\n                  <SwiperSlide key={index}>\r\n                    <div className='youtube-video'>\r\n                      <YouTube videoId={getYouTubeID(video.url)} />\r\n                    </div>\r\n                  </SwiperSlide>\r\n                );\r\n              })}\r\n          </Swiper>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YoutubeSection;\r\n"]},"metadata":{},"sourceType":"module"}