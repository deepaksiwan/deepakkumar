{"ast":null,"code":"import axios from 'axios';\nimport { CAMPUS_GET_REQUEST, CAMPUS_GET_SUCCESS, CAMPUS_GET_FAIL } from '../constants/asCampusConstants';\nexport const asCampus = ({\n  name,\n  email,\n  phone,\n  orgName,\n  message,\n  address,\n  designation\n}) => async dispatch => {\n  try {\n    const config = {\n      header: {\n        'Content-type': 'multipart/form-data'\n      }\n    };\n    dispatch({\n      type: CAMPUS_GET_REQUEST\n    });\n    const {\n      data\n    } = await axios.post('https://www.test.pinsoutinnovation.com/campus', {\n      name,\n      email,\n      phone,\n      orgName,\n      message,\n      address,\n      designation\n    }, config);\n    console.log(data);\n    dispatch({\n      type: CAMPUS_GET_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CAMPUS_GET_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const asOrganisation = ({\n  name,\n  email,\n  phone,\n  orgName,\n  message,\n  address,\n  designation\n}) => async dispatch => {\n  try {\n    const config = {\n      header: {\n        'Content-type': 'multipart/form-data'\n      }\n    };\n    dispatch({\n      type: CAMPUS_GET_REQUEST\n    });\n    const {\n      data\n    } = await axios.post('http://localhost:5000/organisation', {\n      name,\n      email,\n      phone,\n      orgName,\n      message,\n      address,\n      designation\n    }, config);\n    console.log(data);\n    dispatch({\n      type: CAMPUS_GET_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CAMPUS_GET_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const beMentor = ({\n  name,\n  email,\n  phone,\n  gender,\n  linkedIn,\n  dob,\n  address,\n  interests,\n  whomToMentor,\n  industry,\n  otherIndustry,\n  firstPref,\n  secondPref,\n  thirdPref,\n  designation,\n  about,\n  getToKnow,\n  grad_college,\n  grad_degree,\n  grad_year,\n  post_grad_college,\n  post_grad_degree,\n  post_grad_year\n}) => async dispatch => {\n  try {\n    const config = {\n      header: {\n        'Content-type': 'multipart/form-data'\n      }\n    };\n    dispatch({\n      type: CAMPUS_GET_REQUEST\n    });\n    const {\n      data\n    } = await axios.post('http://localhost:5000/be-a-mentor', {\n      name,\n      email,\n      phone,\n      gender,\n      linkedIn,\n      dob,\n      address,\n      interests,\n      whomToMentor,\n      industry,\n      otherIndustry,\n      firstPref,\n      secondPref,\n      thirdPref,\n      designation,\n      about,\n      getToKnow,\n      grad_college,\n      grad_degree,\n      grad_year,\n      post_grad_college,\n      post_grad_degree,\n      post_grad_year\n    }, config);\n    console.log(data);\n    dispatch({\n      type: CAMPUS_GET_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CAMPUS_GET_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};","map":{"version":3,"sources":["C:/clientpinsoutcode/client/src/redux/actions/asCampusActions.js"],"names":["axios","CAMPUS_GET_REQUEST","CAMPUS_GET_SUCCESS","CAMPUS_GET_FAIL","asCampus","name","email","phone","orgName","message","address","designation","dispatch","config","header","type","data","post","console","log","payload","error","response","asOrganisation","beMentor","gender","linkedIn","dob","interests","whomToMentor","industry","otherIndustry","firstPref","secondPref","thirdPref","about","getToKnow","grad_college","grad_degree","grad_year","post_grad_college","post_grad_degree","post_grad_year"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  CAMPUS_GET_REQUEST,\r\n  CAMPUS_GET_SUCCESS,\r\n  CAMPUS_GET_FAIL,\r\n} from '../constants/asCampusConstants';\r\n\r\nexport const asCampus =\r\n  ({ name, email, phone, orgName, message, address, designation }) =>\r\n  async (dispatch) => {\r\n    try {\r\n      const config = {\r\n        header: {\r\n          'Content-type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      dispatch({ type: CAMPUS_GET_REQUEST });\r\n      const { data } = await axios.post(\r\n        'https://www.test.pinsoutinnovation.com/campus',\r\n        { name, email, phone, orgName, message, address, designation },\r\n        config\r\n      );\r\n      console.log(data);\r\n\r\n      dispatch({\r\n        type: CAMPUS_GET_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CAMPUS_GET_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.response,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const asOrganisation =\r\n  ({ name, email, phone, orgName, message, address, designation }) =>\r\n  async (dispatch) => {\r\n    try {\r\n      const config = {\r\n        header: {\r\n          'Content-type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      dispatch({ type: CAMPUS_GET_REQUEST });\r\n      const { data } = await axios.post(\r\n        'http://localhost:5000/organisation',\r\n        { name, email, phone, orgName, message, address, designation },\r\n        config\r\n      );\r\n      console.log(data);\r\n\r\n      dispatch({\r\n        type: CAMPUS_GET_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CAMPUS_GET_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.response,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const beMentor =\r\n  ({\r\n    name,\r\n    email,\r\n    phone,\r\n    gender,\r\n    linkedIn,\r\n    dob,\r\n    address,\r\n    interests,\r\n    whomToMentor,\r\n    industry,\r\n    otherIndustry,\r\n    firstPref,\r\n    secondPref,\r\n    thirdPref,\r\n    designation,\r\n    about,\r\n    getToKnow,\r\n    grad_college,\r\n    grad_degree,\r\n    grad_year,\r\n    post_grad_college,\r\n    post_grad_degree,\r\n    post_grad_year,\r\n  }) =>\r\n  async (dispatch) => {\r\n    try {\r\n      const config = {\r\n        header: {\r\n          'Content-type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      dispatch({ type: CAMPUS_GET_REQUEST });\r\n      const { data } = await axios.post(\r\n        'http://localhost:5000/be-a-mentor',\r\n        {\r\n          name,\r\n          email,\r\n          phone,\r\n          gender,\r\n          linkedIn,\r\n          dob,\r\n          address,\r\n          interests,\r\n          whomToMentor,\r\n          industry,\r\n          otherIndustry,\r\n          firstPref,\r\n          secondPref,\r\n          thirdPref,\r\n          designation,\r\n          about,\r\n          getToKnow,\r\n          grad_college,\r\n          grad_degree,\r\n          grad_year,\r\n          post_grad_college,\r\n          post_grad_degree,\r\n          post_grad_year,\r\n        },\r\n        config\r\n      );\r\n      console.log(data);\r\n\r\n      dispatch({\r\n        type: CAMPUS_GET_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CAMPUS_GET_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.response,\r\n      });\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}