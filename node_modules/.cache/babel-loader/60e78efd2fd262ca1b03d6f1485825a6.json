{"ast":null,"code":"import axios from 'axios';\nimport { FormCheck } from 'react-bootstrap';\nimport { PROGRAM_GET_REQUEST, PROGRAM_GET_SUCCESS, PROGRAM_GET_FAIL, PROGRAM_GET_SEARCH } from '../constants/programConstants';\nexport const listProgram = () => async dispatch => {\n  try {\n    dispatch({\n      type: PROGRAM_GET_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('https://mentorkart.org/api/sso-courses');\n    console.log(`${process.env.REACT_APP_WEBSITE_URL}`);\n    console.log(data);\n    dispatch({\n      type: PROGRAM_GET_SUCCESS,\n      payload: data.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROGRAM_GET_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const filterProgram = chec => async dispatch => {\n  try {\n    dispatch({\n      type: PROGRAM_GET_REQUEST\n    });\n    console.log(chec.toString(), 'chec.toString');\n    const {\n      data\n    } = await axios.get(`${process.env.REACT_APP_WEBSITE_URL}/api/sso-courses`);\n    const fil = data.data;\n    console.log('DATA', fil);\n    let d = chec.map(g => fil.filter(x => Object.values(x).join(',').toLowerCase().includes(g.toLowerCase()))).flat(); // eslint-disable-next-line array-callback-return\n\n    let p = chec.map(x => {\n      const j = x.split(' ');\n      console.log('j', j);\n      if (j.length >= 2 && j[1] === 'Months') return j[0];\n    });\n    console.log('p', p);\n\n    if (p) {\n      d = fil.filter(x => {\n        const d1 = new Date(x['from_date']);\n        const d2 = new Date(x['to_date']);\n        console.log(d1, d2, 'd1, d2');\n        const computedMonths = Math.ceil((d2 - d1) / (1000 * 60 * 60 * 24) / 30);\n        console.log(computedMonths); // console.log('final sorted',d);\n\n        console.log('just checkkinnggg', computedMonths <= Number(p));\n        return computedMonths <= Number(p);\n      });\n    }\n\n    console.log('d', d);\n    dispatch({\n      type: PROGRAM_GET_SUCCESS,\n      payload: d\n    });\n  } catch (error) {\n    //console.log(error)\n    dispatch({\n      type: PROGRAM_GET_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const listStudentCourse = () => async dispatch => {\n  try {\n    dispatch({\n      type: PROGRAM_GET_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${process.env.REACT_APP_WEBSITE_URL}/api/sso-courses`);\n    const fil = data.data;\n    const std = fil.filter(x => x.user_category.split(',').includes('STUDENT'));\n    dispatch({\n      type: PROGRAM_GET_SUCCESS,\n      payload: std\n    });\n  } catch (error) {\n    dispatch({\n      type: PROGRAM_GET_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const listProfessionalCourse = () => async dispatch => {\n  try {\n    dispatch({\n      type: PROGRAM_GET_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${process.env.REACT_APP_WEBSITE_URL}/api/sso-courses`);\n    const fil = data.data;\n    const std = fil.filter(x => x.user_category.split(',').includes('PROFESSIONAL'));\n    dispatch({\n      type: PROGRAM_GET_SUCCESS,\n      payload: std\n    });\n  } catch (error) {\n    dispatch({\n      type: PROGRAM_GET_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const listEntrepreneurCourse = () => async dispatch => {\n  try {\n    dispatch({\n      type: PROGRAM_GET_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${process.env.REACT_APP_WEBSITE_URL}/api/sso-courses`);\n    const fil = data.data;\n    const std = fil.filter(x => x.user_category.split(',').includes('ENTREPRENEUR'));\n    dispatch({\n      type: PROGRAM_GET_SUCCESS,\n      payload: std\n    });\n  } catch (error) {\n    dispatch({\n      type: PROGRAM_GET_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const searchProgram = query => async dispatch => {\n  try {\n    dispatch({\n      type: PROGRAM_GET_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${process.env.REACT_APP_WEBSITE_URL}/api/sso-courses`);\n    const fil = data.data;\n    let isFound = false;\n    const std = fil.filter(x => {\n      // if(query.toLowerCase() === \"free\"){\n      //   return x.price === 0;\n      // }\n      return x.LMS_course_name.toLowerCase().includes(query.toLowerCase()) || x.mk_course_name.toLowerCase().includes(query.toLowerCase()); //LMS_course_name\t:\tTest\n      //mk_course_name\t:\tTest\n      // if (x.LMS_course_name) {\n      //   isFound = x.LMS_course_name.toLowerCase().includes(query.toLowerCase());\n      //   if(isFound)\n      //     return isFound;\n      // }\n      // if (x.mk_course_name) {\n      //   isFound = x.mk_course_name.toLowerCase().includes(query.toLowerCase());\n      //   if(isFound)\n      //     return isFound;\n      // }\n      // if (x.description) {\n      //   isFound = x.description.toLowerCase().includes(query.toLowerCase());\n      //   if(isFound)\n      //     return isFound;\n      // }\n      // if (x.user_category) {\n      //   isFound = x.user_category.toLowerCase().includes(query.toLowerCase());\n      //   if(isFound)\n      //     return isFound;\n      // }\n      // if (x.from_date) {\n      //   isFound =  x.from_date.toLowerCase().includes(query.toLowerCase());\n      //   if(isFound)\n      //     return isFound;\n      // }\n      // if (x.to_date) {\n      //   isFound =  x.to_date.toLowerCase().includes(query.toLowerCase());\n      //   if(isFound)\n      //     return isFound;\n      // }\n      // if (x.course_type) {\n      //   isFound =  x.course_type.toLowerCase().includes(query.toLowerCase());\n      //   if(isFound)\n      //     return isFound;\n      // }\n      // if (x.icon_url) {\n      //   isFound =  x.icon_url.toLowerCase().includes(query.toLowerCase());\n      //   if(isFound)\n      //     return isFound;\n      // }\n      //   return x.price;\n    }); // console.log(std);\n\n    dispatch({\n      type: PROGRAM_GET_SEARCH,\n      payload: std\n    });\n  } catch (error) {\n    dispatch({\n      type: PROGRAM_GET_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};","map":{"version":3,"sources":["B:/gitLabContri_staging-pr/frontend/src/redux/actions/programActions.js"],"names":["axios","FormCheck","PROGRAM_GET_REQUEST","PROGRAM_GET_SUCCESS","PROGRAM_GET_FAIL","PROGRAM_GET_SEARCH","listProgram","dispatch","type","data","get","console","log","process","env","REACT_APP_WEBSITE_URL","payload","error","response","message","filterProgram","chec","toString","fil","d","map","g","filter","x","Object","values","join","toLowerCase","includes","flat","p","j","split","length","d1","Date","d2","computedMonths","Math","ceil","Number","listStudentCourse","std","user_category","listProfessionalCourse","listEntrepreneurCourse","searchProgram","query","isFound","LMS_course_name","mk_course_name"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { FormCheck } from 'react-bootstrap';\r\nimport {\r\n  PROGRAM_GET_REQUEST,\r\n  PROGRAM_GET_SUCCESS,\r\n  PROGRAM_GET_FAIL,\r\n  PROGRAM_GET_SEARCH,\r\n} from '../constants/programConstants';\r\n\r\nexport const listProgram = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PROGRAM_GET_REQUEST });\r\n    const { data } = await axios.get('https://mentorkart.org/api/sso-courses');\r\n    console.log(`${process.env.REACT_APP_WEBSITE_URL}`);\r\n    console.log(data);\r\n    dispatch({\r\n      type: PROGRAM_GET_SUCCESS,\r\n      payload: data.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROGRAM_GET_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const filterProgram = (chec) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PROGRAM_GET_REQUEST });\r\n    console.log(chec.toString(), 'chec.toString');\r\n    const { data } = await axios.get(\r\n      `${process.env.REACT_APP_WEBSITE_URL}/api/sso-courses`\r\n    );\r\n    const fil = data.data;\r\n    console.log('DATA', fil);\r\n    let d = chec\r\n      .map((g) =>\r\n        fil.filter((x) =>\r\n          Object.values(x).join(',').toLowerCase().includes(g.toLowerCase())\r\n        )\r\n      )\r\n      .flat();\r\n\r\n    // eslint-disable-next-line array-callback-return\r\n    let p = chec.map((x) => {\r\n      const j = x.split(' ');\r\n      console.log('j', j);\r\n      if (j.length >= 2 && j[1] === 'Months') return j[0];\r\n    });\r\n    console.log('p', p);\r\n    if (p) {\r\n      d = fil.filter((x) => {\r\n        const d1 = new Date(x['from_date']);\r\n        const d2 = new Date(x['to_date']);\r\n        console.log(d1, d2, 'd1, d2');\r\n        const computedMonths = Math.ceil(\r\n          (d2 - d1) / (1000 * 60 * 60 * 24) / 30\r\n        );\r\n        console.log(computedMonths);\r\n        // console.log('final sorted',d);\r\n        console.log('just checkkinnggg', computedMonths <= Number(p));\r\n        return computedMonths <= Number(p);\r\n      });\r\n    }\r\n    console.log('d', d);\r\n\r\n    dispatch({\r\n      type: PROGRAM_GET_SUCCESS,\r\n      payload: d,\r\n    });\r\n  } catch (error) {\r\n    //console.log(error)\r\n    dispatch({\r\n      type: PROGRAM_GET_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listStudentCourse = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PROGRAM_GET_REQUEST });\r\n    const { data } = await axios.get(\r\n      `${process.env.REACT_APP_WEBSITE_URL}/api/sso-courses`\r\n    );\r\n    const fil = data.data;\r\n    const std = fil.filter((x) =>\r\n      x.user_category.split(',').includes('STUDENT')\r\n    );\r\n\r\n    dispatch({\r\n      type: PROGRAM_GET_SUCCESS,\r\n      payload: std,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROGRAM_GET_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProfessionalCourse = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PROGRAM_GET_REQUEST });\r\n    const { data } = await axios.get(\r\n      `${process.env.REACT_APP_WEBSITE_URL}/api/sso-courses`\r\n    );\r\n    const fil = data.data;\r\n    const std = fil.filter((x) =>\r\n      x.user_category.split(',').includes('PROFESSIONAL')\r\n    );\r\n\r\n    dispatch({\r\n      type: PROGRAM_GET_SUCCESS,\r\n      payload: std,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROGRAM_GET_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listEntrepreneurCourse = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PROGRAM_GET_REQUEST });\r\n    const { data } = await axios.get(\r\n      `${process.env.REACT_APP_WEBSITE_URL}/api/sso-courses`\r\n    );\r\n    const fil = data.data;\r\n    const std = fil.filter((x) =>\r\n      x.user_category.split(',').includes('ENTREPRENEUR')\r\n    );\r\n\r\n    dispatch({\r\n      type: PROGRAM_GET_SUCCESS,\r\n      payload: std,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROGRAM_GET_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const searchProgram = (query) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PROGRAM_GET_REQUEST });\r\n    const { data } = await axios.get(\r\n      `${process.env.REACT_APP_WEBSITE_URL}/api/sso-courses`\r\n    );\r\n    const fil = data.data;\r\n    let isFound = false;\r\n    const std = fil.filter((x) => {\r\n      // if(query.toLowerCase() === \"free\"){\r\n      //   return x.price === 0;\r\n      // }\r\n\r\n      return (\r\n        x.LMS_course_name.toLowerCase().includes(query.toLowerCase()) ||\r\n        x.mk_course_name.toLowerCase().includes(query.toLowerCase())\r\n      );\r\n\r\n      //LMS_course_name\t:\tTest\r\n      //mk_course_name\t:\tTest\r\n\r\n      // if (x.LMS_course_name) {\r\n      //   isFound = x.LMS_course_name.toLowerCase().includes(query.toLowerCase());\r\n      //   if(isFound)\r\n      //     return isFound;\r\n      // }\r\n      // if (x.mk_course_name) {\r\n      //   isFound = x.mk_course_name.toLowerCase().includes(query.toLowerCase());\r\n      //   if(isFound)\r\n      //     return isFound;\r\n      // }\r\n      // if (x.description) {\r\n      //   isFound = x.description.toLowerCase().includes(query.toLowerCase());\r\n      //   if(isFound)\r\n      //     return isFound;\r\n      // }\r\n      // if (x.user_category) {\r\n      //   isFound = x.user_category.toLowerCase().includes(query.toLowerCase());\r\n      //   if(isFound)\r\n      //     return isFound;\r\n      // }\r\n      // if (x.from_date) {\r\n      //   isFound =  x.from_date.toLowerCase().includes(query.toLowerCase());\r\n      //   if(isFound)\r\n      //     return isFound;\r\n      // }\r\n      // if (x.to_date) {\r\n      //   isFound =  x.to_date.toLowerCase().includes(query.toLowerCase());\r\n      //   if(isFound)\r\n      //     return isFound;\r\n      // }\r\n      // if (x.course_type) {\r\n      //   isFound =  x.course_type.toLowerCase().includes(query.toLowerCase());\r\n      //   if(isFound)\r\n      //     return isFound;\r\n      // }\r\n      // if (x.icon_url) {\r\n      //   isFound =  x.icon_url.toLowerCase().includes(query.toLowerCase());\r\n      //   if(isFound)\r\n      //     return isFound;\r\n      // }\r\n      //   return x.price;\r\n    });\r\n\r\n    // console.log(std);\r\n    dispatch({\r\n      type: PROGRAM_GET_SEARCH,\r\n      payload: std,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROGRAM_GET_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}