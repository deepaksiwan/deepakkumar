{"ast":null,"code":"var _jsxFileName = \"B:\\\\gitLabContri_staging-pr\\\\frontend\\\\src\\\\components\\\\campus\\\\CampusSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Campus from './Campus';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listpartner } from '../../redux/actions/partnerActions';\nimport { listWebsiteContent } from '../../redux/actions/websiteContentActions'; // import Swiper core and required modules\n\nimport SwiperCore, { A11y, Autoplay } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react'; // Import Swiper styles\n\nimport 'swiper/swiper.scss';\nimport 'swiper/components/pagination/pagination.scss'; // install Swiper modules\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSwiperCore.use([A11y, Autoplay]);\n\nconst CampusSection = () => {\n  _s();\n\n  var _websiteContent$, _websiteContent$$data, _partner$, _partner$$data;\n\n  const dispatch = useDispatch();\n  const partnerList = useSelector(state => state.partnerList);\n  const websiteContentList = useSelector(state => state.websiteContentList);\n  const {\n    partner\n  } = partnerList;\n  const {\n    websiteContent\n  } = websiteContentList;\n  useEffect(() => {\n    dispatch(listpartner());\n    dispatch(listWebsiteContent());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"partners\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-xxl px-xxl-0 px-lg-5 px-md-4 px-sm-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: (_websiteContent$ = websiteContent[0]) === null || _websiteContent$ === void 0 ? void 0 : (_websiteContent$$data = _websiteContent$.data[22]) === null || _websiteContent$$data === void 0 ? void 0 : _websiteContent$$data.field_data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"partners-images\",\n        children: /*#__PURE__*/_jsxDEV(Swiper, {\n          spaceBetween: 0,\n          slidesPerView: 1,\n          autoplay: {\n            autoplay: true,\n            delay: 10000\n          },\n          breakpoints: {\n            // when window width is >= 0px\n            0: {\n              slidesPerView: 2\n            },\n            500: {\n              slidesPerView: 3\n            },\n            // when window width is >= 1000px\n            700: {\n              slidesPerView: 5\n            },\n            900: {\n              slidesPerView: 7\n            }\n          },\n          children: (_partner$ = partner[0]) === null || _partner$ === void 0 ? void 0 : (_partner$$data = _partner$.data) === null || _partner$$data === void 0 ? void 0 : _partner$$data.map((x, index) => {\n            return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n              children: /*#__PURE__*/_jsxDEV(Campus, {\n                url: x.partners_img\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CampusSection, \"6alBdMDYyM25Q9xWiMaWIKITSFQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = CampusSection;\nexport default CampusSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CampusSection\");","map":{"version":3,"sources":["B:/gitLabContri_staging-pr/frontend/src/components/campus/CampusSection.js"],"names":["React","useEffect","Campus","useDispatch","useSelector","listpartner","listWebsiteContent","SwiperCore","A11y","Autoplay","Swiper","SwiperSlide","use","CampusSection","dispatch","partnerList","state","websiteContentList","partner","websiteContent","data","field_data","autoplay","delay","slidesPerView","map","x","index","partners_img"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,SAASC,kBAAT,QAAmC,2CAAnC,C,CAEA;;AACA,OAAOC,UAAP,IAAqBC,IAArB,EAA2BC,QAA3B,QAA2C,QAA3C;AAEA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC,C,CAEA;;AACA,OAAO,oBAAP;AACA,OAAO,8CAAP,C,CAEA;;;AACAJ,UAAU,CAACK,GAAX,CAAe,CAACJ,IAAD,EAAOC,QAAP,CAAf;;AAEA,MAAMI,aAAa,GAAG,MAAM;AAAA;;AAAA;;AAC1B,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,WAAW,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,WAAlB,CAA/B;AACA,QAAME,kBAAkB,GAAGb,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,kBAAlB,CAAtC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAcH,WAApB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAqBF,kBAA3B;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACT,WAAW,EAAZ,CAAR;AACAS,IAAAA,QAAQ,CAACR,kBAAkB,EAAnB,CAAR;AACD,GAHQ,EAGN,CAACQ,QAAD,CAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gDAAf;AAAA,8BACE;AAAA,sCAAKK,cAAc,CAAC,CAAD,CAAnB,8EAAK,iBAAmBC,IAAnB,CAAwB,EAAxB,CAAL,0DAAK,sBAA6BC;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,YAAY,EAAE,CADhB;AAEE,UAAA,aAAa,EAAE,CAFjB;AAGE,UAAA,QAAQ,EAAE;AAAEC,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,KAAK,EAAE;AAAzB,WAHZ;AAIE,UAAA,WAAW,EAAE;AACX;AACA,eAAG;AACDC,cAAAA,aAAa,EAAE;AADd,aAFQ;AAKX,iBAAK;AACHA,cAAAA,aAAa,EAAE;AADZ,aALM;AAQX;AACA,iBAAK;AACHA,cAAAA,aAAa,EAAE;AADZ,aATM;AAYX,iBAAK;AACHA,cAAAA,aAAa,EAAE;AADZ;AAZM,WAJf;AAAA,iCAqBGN,OAAO,CAAC,CAAD,CArBV,gEAqBG,UAAYE,IArBf,mDAqBG,eAAkBK,GAAlB,CAAsB,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACnC,gCACE,QAAC,WAAD;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,GAAG,EAAED,CAAC,CAACE;AAAf;AAAA;AAAA;AAAA;AAAA;AADF,eAAkBD,KAAlB;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WANA;AArBH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CAnDD;;GAAMd,a;UACaV,W,EACGC,W,EACOA,W;;;KAHvBS,a;AAqDN,eAAeA,aAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Campus from './Campus';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listpartner } from '../../redux/actions/partnerActions';\r\nimport { listWebsiteContent } from '../../redux/actions/websiteContentActions';\r\n\r\n// import Swiper core and required modules\r\nimport SwiperCore, { A11y, Autoplay } from 'swiper';\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\n\r\n// install Swiper modules\r\nSwiperCore.use([A11y, Autoplay]);\r\n\r\nconst CampusSection = () => {\r\n  const dispatch = useDispatch();\r\n  const partnerList = useSelector((state) => state.partnerList);\r\n  const websiteContentList = useSelector((state) => state.websiteContentList);\r\n\r\n  const { partner } = partnerList;\r\n  const { websiteContent } = websiteContentList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listpartner());\r\n    dispatch(listWebsiteContent());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className='partners'>\r\n      <div className='container-xxl px-xxl-0 px-lg-5 px-md-4 px-sm-3'>\r\n        <h1>{websiteContent[0]?.data[22]?.field_data}</h1>\r\n        <div className='partners-images'>\r\n          <Swiper\r\n            spaceBetween={0}\r\n            slidesPerView={1}\r\n            autoplay={{ autoplay: true, delay: 10000 }}\r\n            breakpoints={{\r\n              // when window width is >= 0px\r\n              0: {\r\n                slidesPerView: 2,\r\n              },\r\n              500: {\r\n                slidesPerView: 3,\r\n              },\r\n              // when window width is >= 1000px\r\n              700: {\r\n                slidesPerView: 5,\r\n              },\r\n              900: {\r\n                slidesPerView: 7,\r\n              },\r\n            }}\r\n          >\r\n            {partner[0]?.data?.map((x, index) => {\r\n              return (\r\n                <SwiperSlide key={index}>\r\n                  <Campus url={x.partners_img} />\r\n                </SwiperSlide>\r\n              );\r\n            })}\r\n          </Swiper>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CampusSection;\r\n"]},"metadata":{},"sourceType":"module"}